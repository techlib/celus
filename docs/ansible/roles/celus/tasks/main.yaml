- name: make sure some basic applications are installed
  dnf:
    state: latest
    name:
      - git   # to get source from GIT
      - sudo  # to be able to create the PostgreSQL database
      - python3-psycopg2  # to work with PostgreSQL from ansible
      - redis  # used for caching by the system
      - zstd  # fast compression library used for backups

- name: start the redis server
  service: name=redis state=started enabled=yes

- name: ensure virtualenv and helpers are installed
  pip: name=virtualenvwrapper

- name: activate virtualenvwrapper
  template: src=etc_profiled_virtualenvwrapper.sh.j2 dest=/etc/profile.d/virtualenvwrapper.sh

- name: make sure python source dir exists
  file: path=/opt/{{ project_name }}/ group=apache mode="g=rwx" state=directory
  tags:
      - git_update
      - untar

- name: unpack python source from github
  unarchive:
    src: https://github.com/techlib/celus/archive/{{ project_branch }}.tar.gz
    dest: /opt/{{ project_name }}/
    remote_src: yes
    extra_opts: ["--strip-components=1"]
    owner: root
    group: apache
  tags:
    - git_update
  notify:
    - restart apache
    - restart celery
    - restart celerybeat

- name: install project python dependencies into virtualenv
  pip: requirements=/opt/{{ project_name }}/requirements/{{ settings_version }}.txt virtualenv=/opt/virtualenvs/{{ project_name }} chdir=/opt/{{ project_name }} virtualenv_python=python3 extra_args=-U
  tags: git_update

# postgres
- name: prepare PostgreSQL database
  include: postgres.yaml
  tags: postgres

# main Django related stuff
- name: install and set up Django
  include: django.yaml
  tags: django

# all things related to Celery
- name: install and set up Celery
  include: celery.yaml
  tags: celery

# Cron scripts and helpfull stuff

# the following is necessary for the virtualenvwrapper to work correctly
- name: make sure the 'python' command is available and refers to python3
  alternatives: name=python path=/usr/bin/python3

- name: create script for root to easily activate virtualenv
  template: src=root_activate_virtualenv.sh.j2 dest=/root/activate_virtualenv.sh

- name: create dailycron script for django sessions cleanup
  template: src=etc_cron_daily_cleanup_django_sessions.j2 dest=/etc/cron.daily/cleanup_django_sessions mode=u=rwx,g=rx,o=rx

- name: create backup directory for postgres database
  file: path=/root/backup group=root mode="u=rwx" state=directory

- name: create daily backup script for postgres database
  template: src=etc_cron_daily_backup_db.j2 dest=/etc/cron.daily/backup_{{ db_name }}_db mode=u=rwx,g=rx,o=rx
